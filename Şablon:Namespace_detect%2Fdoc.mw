{{documentation subpage}}
{{high-risk| 2,000,000+ }}
<!-- PLEASE ADD CATEGORIES AND INTERWIKIS AT THE BOTTOM OF THIS PAGE -->

This is the {{tl|namespace detect}} meta-template.

It helps other templates detect what type of page they are on.

It detects and groups all the different [[Wikipedia:Namespace#Enumeration|namespaces]] used on Wikipedia into several types:

:'''main''' = Main/article space, as in normal Wikipedia articles.
:'''talk''' = Any talk space, such as page names that start with "Talk:", "User talk:", "File talk:" and so on.
:'''user, wikipedia, file, mediawiki, template, help, category''', '''portal''' and '''book''' = The other namespaces except the talk pages.
:'''other''' = Any namespaces that were not specified as a parameter to the template. See explanation below.

For backwards compatibility this template also understands the old name '''image''' for '''file'''. But using '''image''' is now deprecated.

'''Note!''' For most usage cases it might be better to use the simpler namespace detection templates. (See the [[#See also|see also]] section below.) Since this template is more prone to human errors such as misspelling the parameter names. 

=== Usage ===
This template takes one or more parameters named after the different page types as listed above. Like this:

<pre>
{{namespace detect
| main  = Article text
| talk  = Talk page text
| other = Other pages text
}}
</pre>

If the template is on a main (article) page, it will return this:

:{{namespace detect| demospace=main
| main  = Article text
| talk  = Talk page text
| other = Other pages text
}}

If the template is on any other page than an article or a talk page it will return this:

:{{namespace detect
| main  = Article text
| talk  = Talk page text
| other = Other pages text
}}

The example above made the template return something for all page types. But if we don't use the '''other''' parameter or leave it empty then it will not return anything for the other page types. Like this:

<pre>
{{namespace detect
| file     = File page text
| category = Category page text
| other    =
}}
</pre>

On any pages other than file and category pages the code above will render nothing.
<!-- Do not remove this one. It is supposed to render nothing, but we have it here for testing purposes. -->
:{{namespace detect
| file     = File page text
| category = Category page text
| other    =
}}

By using an empty parameter you can make it so the template doesn't render anything for some specific page type. Like this:

<pre>
{{namespace detect
| main  = 
| other = Other pages text
}}
</pre>

The code above will render nothing when on mainspace (article) pages, but will return this when on other pages:

:{{namespace detect
| main  = 
| other = Other pages text
}}

=== Demospace and page ===
For testing and demonstration purposes this template can take two parameters named '''demospace''' and '''page'''. 

Demospace understands any of the page type names used by this template, including the '''other''' type. It tells the template to behave like it is on some specific type of page. Like this:

<pre>
{{namespace detect 
| main  = Article text
| other = Other pages text
| demospace = main
}}
</pre>

No matter on what kind of page the code above is used it will return this:

:{{namespace detect 
| main  = Article text
| other = Other pages text
| demospace = main
}}

The '''page''' parameter instead takes a normal pagename. It makes this template behave exactly as if on that page. The pagename doesn't have to be an existing page. Like this:

<pre>
{{namespace detect 
| user  = User page text
| other = Other pages text
| page = User:Example
}}
</pre>

No matter on what kind of page the code above is used it will return this:

:{{namespace detect 
| user  = User page text
| other = Other pages text
| page = User:Example
}}

It can be convenient to let your template understand the demospace and/or page parameter and send it on to the {{tl|namespace detect}} template. Then do like this:

<pre>
{{namespace detect 
| main  = Article text
| other = Other pages text
| demospace = {{{demospace|}}}
| page  = {{{page|}}}
}}
</pre>

If both the '''demospace''' and '''page''' parameters are empty or undefined then the template will detect page types as usual.

=== Parameters ===
List of all parameters:

<pre>
{{namespace detect
| main  = 
...
| other =
| demospace = {{{demospace|}}} / main / talk / user / 
              wikipedia / file / mediawiki / template / 
              help / category / portal / book / other
| page  = {{{page|}}} / User:Example
}}
</pre>

Note: Empty values to the "main" ... "book" parameters have special meaning.

=== Technical details ===
Namespace "Image" was renamed to "File" on 11 December 2008. This template was updated to understand both names well before that, thus it still works fine. For backwards compatibility it still understands "image" both as a parameter name, such as "image = File page text", and as a value "demospace = image".

Namespace "Book" was added to the English Wikipedia on 28 December 2009. This template has been updated so it detects the "Book:" namespace as type '''book''', and it already automatically detected "Book talk:" as type '''talk'''.

If you intend to feed tables as content to the numbered parameters of this template, then you need to know this:

[[Help:Template|Templates]] do have a problem to handle parameter data that contains pipes "<code>|</code>", unless the pipe is inside another template <code><nowiki>{{name|param1}}</nowiki></code> or inside a piped link <code><nowiki>[[Help:Template|help]]</nowiki></code>. Thus templates can not handle [[Help:Table|wikitables]] as input unless you escape them by using the {{tn|!}} template. This makes it hard to use wikitables as parameters to templates. Instead the usual solution is to use "[[Help:HTML in wikitext|HTML wikimarkup]]" for the table code, which is more robust.

For more technical details such as about "copying to other projects" and "CSS based namespace detection" see {{tl|main talk other}} and its talk page.

=== See also ===
{{namespace detect see also}}

<includeonly>
<!-- CATEGORIES AND INTERWIKIS HERE, THANKS -->
[[Category:Namespace manipulation templates]]














</includeonly>
